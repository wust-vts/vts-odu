using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

namespace YimaEncNavigator
{
    public partial class FormFaceStyleView : Form
    {
        public int m_iEditingUserMapLayerNum;
        public int innerLayerObjPos;


        public FormFaceStyleView()
        {
            InitializeComponent();
        }

        private void btnColor_Click(object sender, EventArgs e)
        {
            if (this.colorDialog1.ShowDialog() == DialogResult.OK)
            {
                this.txtBoxColorR.Text = colorDialog1.Color.R.ToString();
                this.txtBoxColorG.Text = colorDialog1.Color.G.ToString();
                this.txtBoxColorB.Text = colorDialog1.Color.B.ToString();
            }
        }

        private void btnOk_Click(object sender, EventArgs e)
        {
            int selectID = 1;//选择填充的面风格
            int iColor = GetColor();//填充面的颜色
            bool bSetColor = true;//是否填充面的颜色
            int bSetTransparency = 0;//是否设置面的透明度
            int transparency = 0;//面的透明度
            if (this.checkBoxTransparency.Checked)
            {
                bSetTransparency = 1;
                string strTransparency = this.txtBoxTransparency.Text.Trim();
                if (CheckInfo.isNumber(strTransparency, 0))
                {
                    transparency = Convert.ToInt32(strTransparency);
                }               
            }
            ((FormMain)this.Owner).ymEncCtrl.tmSetFaceObjectStyleRefLib(m_iEditingUserMapLayerNum, innerLayerObjPos, selectID, bSetColor, iColor, bSetTransparency, transparency, false, 0);

            this.Dispose();
            this.Close();
        }

        #region 把颜色的RGB转为整型
        private int GetColor()
        {
            int iColor = 0;
            string colorR = txtBoxColorR.Text.ToString();
            string colorG = txtBoxColorG.Text.ToString();
            string colorB = txtBoxColorB.Text.ToString();
            if (CheckInfo.isNumber(colorR, 0) && CheckInfo.isNumber(colorG, 0) && CheckInfo.isNumber(colorB, 0) && this.checkBoxColor.Checked)
            {
                M_COLOR mColor = new M_COLOR(Convert.ToByte(colorR), Convert.ToByte(colorG), Convert.ToByte(colorB));
                //iColor = mColor.GetHashCode();
                iColor = mColor.ToInt();
            }
            return iColor;
        }
        #endregion

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.Dispose();
            this.Close();
        }
    }
}
