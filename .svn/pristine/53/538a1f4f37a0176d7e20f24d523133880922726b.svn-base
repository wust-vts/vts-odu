using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

namespace YimaEncNavigator
{
    public partial class Form_ShipInfo : Form
    {
        public int m_iShipId = -1;
        public string m_shipname;
        public int lon;
        public int lat;

        public M_POINT m_mShipGeoPo = new M_POINT(0, 0);
        public Form_ShipInfo()
        {
            InitializeComponent();
        }

        
        private void Form_ShipInfo_Load(object sender, EventArgs e)
        {
            this.label_shipName.Text = "船舶名称: ";
            this.label_shipMmsi.Text = "船舶MMSI: ";
            this.label_shipLon.Text = "船舶经度: 0度0分";
            this.label_shipLat.Text = "船舶纬度: 0度0分";
            this.label_shipSpeed.Text = "船舶航速: 0节";
            this.label_shipCourse.Text = "船舶航向: 0度";
            this.label_shipWidth.Text = "船舶宽度: 0米";
            this.label_shipLen.Text = "船舶长度: 0米";
            this.label_shipCallNum.Text = "船舶呼号: 0";
            this.label_shipImo.Text = "船舶 IMO: 0";
            this.label_shipType.Text = "船舶类型: 其他";
            this.label_shipState.Text = "船舶状态: 离线";
            this.label_shipWaterValue.Text = "船舶吃水: 0米";
            this.label_shipDestination.Text = "目 的 地: ";
            this.label_shipLastTime.Text = "最新报位: ";
            this.label_shipArriveTime.Text = "预到时间: ";
            this.label_ToOwnerShipDis.Text = "本船距离: 0海里";
            this.label_ToOwnerShipCourse.Text = "本船方位: 0度";
            RefrshShipInfo();

            this.Location = new Point(((FormMain)this.Owner).Width - this.Width, 130);
        }

        private void RefrshShipInfo()
        {
            bool bTrackShowOrNot = false;//((Form1)this.Owner).ymEncCtrl.GetShipTrackShowOrNot(false, m_iShipId);
            if (bTrackShowOrNot)
            {
                this.btn_ShowTrack.Text = "隐藏轨迹";
            }
            else
            {
                this.btn_ShowTrack.Text = "显示轨迹";
            }

            int iShipPos = ((FormMain)this.Owner).ymEncCtrl.GetOtherVesselPosOfID(m_iShipId);
            if (iShipPos != 0)
            {
                string strCallNum = "28793";
                string strImoNum = "YM86TW";
                string strShipType = "渔船";
                string strState = "在线(主机推动)";
                string strTime = "";
                int iShipType = 0;
                bool bArapValue = false;
                int iShipGeoX = 0;
                int iShipGeoY = 0;
                float fValue = 0;
                int iTimeValue = 0;
                string strValue = "";
                float fSpeed = 0;
                float fSCourse = 0;
                float fShipLen = 0;
                float fShipWidth = 0;
                string strShipName = new string(' ',255);
                double dDisToOwnerShip = 0;
                double dCourseToOwnerShip = 0;
                int iShipMmsi = 0;
                string strArriveTime = "";
                string strShipAttr = new string(' ', 100) ;

                strArriveTime = DateTime.Now.Month.ToString() + "." + DateTime.Now.Day.ToString() + " 18:30";

                ((FormMain)this.Owner).ymEncCtrl.GetOtherVesselCurrentInfo(iShipPos, ref bArapValue, ref iShipGeoX, ref iShipGeoY, ref fSCourse, ref fValue, ref fValue, ref fSpeed, ref fValue, ref iTimeValue, ref strValue);
                ((FormMain)this.Owner).ymEncCtrl.GetOtherVesselBasicInfo(iShipPos, ref fShipLen, ref fShipWidth, ref strShipName, ref iShipMmsi,ref strShipAttr);
                m_shipname = strShipName;
                dDisToOwnerShip = ((FormMain)this.Owner).ymEncCtrl.GetDistBetwTwoPoint(((FormMain)this.Owner).m_mOwnerShipGeoPo.x, ((FormMain)this.Owner).m_mOwnerShipGeoPo.y,iShipGeoX, iShipGeoY);
                dCourseToOwnerShip = ((FormMain)this.Owner).ymEncCtrl.GetBearingBetwTwoPoint(((FormMain)this.Owner).m_mOwnerShipGeoPo.x, ((FormMain)this.Owner).m_mOwnerShipGeoPo.y, iShipGeoX, iShipGeoY);
                strShipName = strShipName.Trim();
                lon = iShipGeoX;
                lat = iShipGeoY;
                if (bArapValue)
                {
                    this.Text = strShipName + "(ARPA)";
                }
                else
                {
                    this.Text = strShipName + "(AIS)";
                }
                                

                if (iShipType %20 == 0)
                {
                    strShipType = "商船";
                }

                strTime = InteropEncDotNet.MTime2String(iTimeValue);

                string strLon = InteropEncDotNet.GetDegreeStringFromGeoCoor(true, iShipGeoX, 10000000);
                string strLat = InteropEncDotNet.GetDegreeStringFromGeoCoor(true, iShipGeoX, 10000000);
                this.label_shipName.Text = "船舶名称: " + strShipName;
                this.label_shipMmsi.Text = "船舶MMSI: " + iShipMmsi.ToString();
                this.label_shipLon.Text = "船舶经度: " + strLon;
                this.label_shipLat.Text = "船舶纬度: " + strLat;
                this.label_shipSpeed.Text = "船舶航速: " + fSpeed.ToString() + "节";
                this.label_shipCourse.Text = "船舶航向: " + fSCourse.ToString() + "度";
                this.label_shipWidth.Text = "船舶宽度: " + fShipWidth.ToString() + "米";
                this.label_shipLen.Text = "船舶长度: " + fShipLen.ToString() + "米";
                this.label_shipCallNum.Text = "船舶呼号: " + strCallNum;
                this.label_shipImo.Text = "船舶 IMO: " + strImoNum;
                this.label_shipType.Text = "船舶类型: " + strShipType;
                this.label_shipState.Text = "船舶状态: " + strState;
                this.label_shipWaterValue.Text = "船舶吃水: 6.8米";
                this.label_shipDestination.Text = "目 的 地: Shanghai";
                this.label_shipLastTime.Text = "最新报位: " + strTime;
                this.label_shipArriveTime.Text = "预到时间: " + strArriveTime;

                this.label_ToOwnerShipDis.Text = "本船距离: " + Math.Round(dDisToOwnerShip,3) + "海里";
                this.label_ToOwnerShipCourse.Text = "本船方位: " + Math.Round(dCourseToOwnerShip, 2) + "度";

                m_mShipGeoPo.x = iShipGeoX;
                m_mShipGeoPo.y = iShipGeoY;
            }
        }

        private void btn_Location_Click(object sender, EventArgs e)
        {
            RefrshShipInfo();
            if (m_mShipGeoPo.x != 0 && m_mShipGeoPo.y != 0)
            {
                ((FormMain)this.Owner).ymEncCtrl.CenterMap(m_mShipGeoPo.x, m_mShipGeoPo.y);
                ((FormMain)this.Owner).m_CurFocuseShipid = m_iShipId;
                ((FormMain)this.Owner).RedrawMapScreen();
            }
            else
            {
                MessageBox.Show("无法获取该船舶位置，当前无法进行定位。");
            }
        }

        private void btn_ShowTrack_Click(object sender, EventArgs e)
        {
            int iShipPos = ((FormMain)this.Owner).ymEncCtrl.GetOtherVesselPosOfID(m_iShipId);
            if (m_iShipId > 0)
            {
                if (this.btn_ShowTrack.Text.Equals("显示轨迹"))
                {
                    ((FormMain)this.Owner).ymEncCtrl.SetShipTrackShowOrNot(false, false, m_iShipId, true);
                    this.btn_ShowTrack.Text = "隐藏轨迹";
                }
                else
                {
                    ((FormMain)this.Owner).ymEncCtrl.SetShipTrackShowOrNot(false, false, m_iShipId, false);
                    this.btn_ShowTrack.Text = "显示轨迹";
                }

                ((FormMain)this.Owner).RedrawMapScreen();
            }
        }

        private void btn_queryAroundShip_Click(object sender, EventArgs e)
        {
            Form_QueryAroundShip queryAShip = new Form_QueryAroundShip();
            queryAShip.m_iShipId = m_iShipId;
            queryAShip.name = m_shipname;
            queryAShip.Lon = lon;
            queryAShip.Lat = lat;
            queryAShip.Owner = this.Owner;
            queryAShip.Show();
        }

    }
}
