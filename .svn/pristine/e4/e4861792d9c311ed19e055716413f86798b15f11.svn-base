using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
//using System.Linq;
using System.Text;
//using System.Threading.Tasks;
using System.Windows.Forms;

namespace YimaEncNavigator
{
    public partial class Form_AddObjectLine : Form
    {
        public int m_iObjAttrType;//线类型:一般线、矩形线、圆线等、SPECIAL_LINE_TYPE类型
        public int m_iLayerPos;//图层索引
        public int m_iObjPos;//物标索引
        public int m_iCurObjectGeoType;//当前物标的类型：点、线、面，M_GEO_TYPE类型
        public bool m_bSaveObjectOk;//是否已经保存成功
        public Form_AddObjectLine()
        {
            InitializeComponent();
        }

        private void Form_AddObjectLine_Load(object sender, EventArgs e)
        {
            this.m_iLayerPos = -1;
            this.m_iObjPos = -1;
            this.textBox_name.Text = "线标绘";
            this.comboBox_LineSize.SelectedIndex = 1;
            this.m_iCurObjectGeoType = (int)M_GEO_TYPE.TYPE_LINE;
            this.m_iObjAttrType = (int)SPECIAL_LINE_TYPE.NO_SPECIAL_TYPE;
        }

        private void linkLabel_selColor_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            ColorDialog curColorDlg = new ColorDialog();
            if (curColorDlg.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                this.textBox_Color.Text = curColorDlg.Color.R.ToString();
                this.textBox_Color.Text += "," + curColorDlg.Color.G.ToString();
                this.textBox_Color.Text += "," + curColorDlg.Color.B.ToString();
            }
        }

        private void trackBar_opacity_ValueChanged(object sender, EventArgs e)
        {
            int iCurTrackBarValue = Convert.ToInt32(this.trackBar_opacity.Value);
            string strValue = (iCurTrackBarValue * 2).ToString() + "%";
            toolTip1.SetToolTip(this.trackBar_opacity, strValue);
        }

        public void AddNewGeoPo(M_POINT curGeoPo)
        {
            int newRowIndex = this.dataGridView_List.Rows.Add();
            //this.dataGridView_List.Rows[newRowIndex].Cells["pos"].Value = i;
            this.dataGridView_List.Rows[newRowIndex].Cells["Column_lon"].Value = InteropEncDotNet.GetDegreeStringFromGeoCoor_new(true,curGeoPo.x,10000000,3);
            this.dataGridView_List.Rows[newRowIndex].Cells["Column_lat"].Value = InteropEncDotNet.GetDegreeStringFromGeoCoor_new(false, curGeoPo.y, 10000000, 3);
        }
        public void SetPointObjectPos(int iLayerPos, int iObjectPos)
        {
            this.m_iLayerPos = iLayerPos;
            this.m_iObjPos = iObjectPos;
        }

        private void button_save_Click(object sender, EventArgs e)
        {
            if (this.m_iLayerPos < 0)
            {
                MessageBox.Show("没有对应的图层。" + this.m_iLayerPos);
                return;
            }
            string strObjName = this.textBox_name.Text;
            string strObjText = strObjName;
            string strContent = this.textBox_content.Text;


            int iObjGeoPoCount = 0;
            M_POINT[] arrGeoPo = new M_POINT[500];
            for (int i = 0; i < this.dataGridView_List.Rows.Count; i++)
            {
                try
                {
                    string strLon = this.dataGridView_List.Rows[i].Cells["Column_lon"].Value.ToString();
                    string strLat = this.dataGridView_List.Rows[i].Cells["Column_lat"].Value.ToString();
                    arrGeoPo[i] = new M_POINT();
                    arrGeoPo[i].x = InteropEncDotNet.GetGeoCoorFromDegreeString(true, strLon);
                    arrGeoPo[i].y = InteropEncDotNet.GetGeoCoorFromDegreeString(false, strLat);
                    iObjGeoPoCount++;
                }
                catch(Exception ex)
                { }
                
            }

            
            if (iObjGeoPoCount > 500)
            {
                MessageBox.Show("最多为500个节点，当前已经是:" + iObjGeoPoCount.ToString() + "个。");
                return;
            }
            else if (iObjGeoPoCount < 2)
            {
                MessageBox.Show("线标绘的节点数至少是两个，请继续添加节点。");
                return;
            }

            M_COLOR textColor = new M_COLOR(255, 0, 0);
            M_POINT mTextOffsetPo = new M_POINT(15, -10);

            if (this.m_iObjPos < 0)
            {
                bool bAddNewObj = ((FormMain)this.Owner).ymEncCtrl.tmAppendObjectInLayer(this.m_iLayerPos, this.m_iCurObjectGeoType);
                if (bAddNewObj == false)
                {
                    MessageBox.Show("添加标绘到引擎失败。");
                    return;
                }
                this.m_iObjPos = ((FormMain)this.Owner).ymEncCtrl.tmGetLayerObjectCount(this.m_iLayerPos) - 1;
                
            }

            ((FormMain)this.Owner).EndDrawObject();//结束绘制

            //设置坐标
            string strObjGeoPo = InteropEncDotNet.GetStringFromPointArray(arrGeoPo, iObjGeoPoCount);
            ((FormMain)this.Owner).ymEncCtrl.tmSetLineObjectCoors(this.m_iLayerPos, this.m_iObjPos, iObjGeoPoCount, ref strObjGeoPo);

            //设置样式
            Byte iR = 0;
            Byte iG = 0;
            Byte iB = 0;
            string strColor = this.textBox_Color.Text.Trim();
            string[] arrColorValue = strColor.Replace('，', ',').Split(',');

            try
            {
                iR = Convert.ToByte(arrColorValue[0]);
                iG = Convert.ToByte(arrColorValue[1]);
                iB = Convert.ToByte(arrColorValue[2]);
            }
            catch(Exception ex)
            {
            }

            M_COLOR lineColor = new M_COLOR(iR, iG, iB);
            int iLineSize = Convert.ToInt32(this.comboBox_LineSize.SelectedItem.ToString());

            ((FormMain)this.Owner).ymEncCtrl.tmSetLineObjectStyle(this.m_iLayerPos, this.m_iObjPos, true, true, 0, 0, iLineSize, lineColor.ToInt(), 0, 0, strObjName, "宋体", 14, textColor.ToInt(), true, false, 0, 0, true);
            //((Form1)this.Owner).ymEncCtrl.tmSetObjectTextRotate(this.m_iLayerPos, this.m_iObjPos, 30);

            //刷新海图
            ((FormMain)this.Owner).RedrawMapScreen();
            MessageBox.Show("添加点标绘成功");
            this.m_bSaveObjectOk = true;
            this.Close();
        }

        private void dataGridView_List_RowPostPaint(object sender, DataGridViewRowPostPaintEventArgs e)
        {
            var dgv = (DataGridView)sender;

            if (dgv.RowHeadersVisible)
            {

                Rectangle rectangle = new Rectangle(e.RowBounds.Left, e.RowBounds.Top, e.RowBounds.Width, e.RowBounds.Height);

                rectangle.Inflate(-3, 0);

                TextRenderer.DrawText(e.Graphics, (e.RowIndex + 1).ToString(), e.InheritedRowStyle.Font, rectangle, e.InheritedRowStyle.ForeColor, TextFormatFlags.Left | TextFormatFlags.VerticalCenter);
            }
        }

        private void textBox_Color_TextChanged(object sender, EventArgs e)
        {
            Byte iR = 0;
            Byte iG = 0;
            Byte iB = 0;
            string strColor = this.textBox_Color.Text.Trim();
            string[] arrColorValue = strColor.Replace('，', ',').Split(',');

            try
            {
                iR = Convert.ToByte(arrColorValue[0]);
                iG = Convert.ToByte(arrColorValue[1]);
                iB = Convert.ToByte(arrColorValue[2]);
                this.linkLabel_selColor.LinkColor = System.Drawing.Color.FromArgb(iR,iG,iB);
            }
            catch(Exception ex)
            {

            }
        }
    }
}
