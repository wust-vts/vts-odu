using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

namespace YimaEncNavigator
{
    public partial class Form_SelectShipHistoryTrackInfoMan : Form
    {
        public int m_iCurShipId = -1;//船舶id
        //public 
        public int m_iCurShipServerId = -1;
        Play_HistoryTrack_Ship m_curPlayShipInfo = new Play_HistoryTrack_Ship();//轨迹回放船舶

        public Form_SelectShipHistoryTrackInfoMan()
        {
            InitializeComponent();

            //使用自定义格式
            this.dateTimePicker1.CustomFormat = "yyyy-MM-dd HH:mm:ss";
            this.dateTimePicker2.CustomFormat = "yyyy-MM-dd HH:mm:ss";
            this.dateTimePicker1.Format = DateTimePickerFormat.Custom;
            this.dateTimePicker2.Format = DateTimePickerFormat.Custom;
            //时间控件的启用
            this.dateTimePicker1.ShowUpDown = true;
            this.dateTimePicker2.ShowUpDown = true;
        }

        private void Form_SelectShipHistoryTrackInfoMan_Load(object sender, EventArgs e)
        {
            ShowShipNameById(m_iCurShipId);
            DateTime curDateTime = DateTime.Now;
            this.dateTimePicker1.Value = new DateTime(curDateTime.Year, curDateTime.Month, curDateTime.Day);
            this.dateTimePicker2.Value = curDateTime;
        }

        private void ShowShipNameById(int iShipId)
        {
            int iShipPos = ((FormMain)this.Owner).ymEncCtrl.GetOtherVesselPosOfID(iShipId);
            if (iShipPos > -1)
            {
                float fValue = 0;
                int mmsi = 0;
                string strShipName = new string(' ', 255);
                string strAttrValue = new string(' ', 255);
                ((FormMain)this.Owner).ymEncCtrl.GetOtherVesselBasicInfo(iShipPos, ref fValue, ref fValue, ref strShipName, ref mmsi, ref strAttrValue);

                this.m_curPlayShipInfo.shipName = strShipName.Trim();
                this.textBox_shipName.Text = this.m_curPlayShipInfo.shipName;
            }
        }

        private void button_SelectShip_Click(object sender, EventArgs e)
        {

        }
        private void button_Play_Click(object sender, EventArgs e)
        {
            int iShipTrackPoCount = this.m_curPlayShipInfo.arrTrackInfo.Count;
            if (iShipTrackPoCount == 0)
            {
                MessageBox.Show("没有查询到轨迹点，不能回放！");
                return;
            }


            ((FormMain)this.Owner).m_playHistoryShipMan.Clear();
            ((FormMain)this.Owner).m_playHistoryShipMan.AddNewPlayHistoryShip(this.m_curPlayShipInfo);


            Form_PlayShipHistoryTrackMan curPlayShipHistoryTrack = new Form_PlayShipHistoryTrackMan();
            curPlayShipHistoryTrack.Owner = this.Owner;
            //curPlayShipHistoryTrack.m_arrCurPlayShipInfo.Add(this.m_curPlayShipInfo);
            this.Close();
            curPlayShipHistoryTrack.Show();
        }

        //查询
        private void button_Select_Click(object sender, EventArgs e)
        {
            int iShipId = this.m_iCurShipId;
            DateTime dtStartTime = this.dateTimePicker1.Value;
            DateTime dtEndTime = this.dateTimePicker2.Value;

            int iStartTime = InteropEncDotNet.DataTime2Int(dtStartTime);
            int iEndTime = InteropEncDotNet.DataTime2Int(dtEndTime);

            if (iShipId < 0)
            {
                MessageBox.Show("请选择船舶！");
                return;
            }

            this.dataGridView_List.Rows.Clear();//清除历史轨迹

            //模拟轨迹信息
            if (this.m_iCurShipId > 0)
            {
                m_curPlayShipInfo.Clear();
                m_curPlayShipInfo.shipId = iShipId;

                Random rand = new Random();//生成随机数
                int iTrackPoCount = 500;
                M_POINT mGeoPo = new M_POINT();
                int iCurTime = iStartTime + rand.Next(10, 100);
                float head = rand.Next(45, 130);
                float speed = rand.Next(10, 50);

                mGeoPo.x = 1220000000 + rand.Next(10000000, 20000000);
                mGeoPo.y = 300000000 + rand.Next(10000000, 20000000); ;
                for (int i = 0; i < iTrackPoCount; i++)
                {
                    //当前船舶的信息
                    float iAddGeoLen = rand.Next(1000, 10000);
                    float angle = (float)((90 - head) * Math.PI / 180);
                    int curGeoPoX = (int)(mGeoPo.x + Math.Cos(angle) * iAddGeoLen);
                    int curGeoPoY = (int)(mGeoPo.y + Math.Sin(angle) * iAddGeoLen);

                    mGeoPo.x = curGeoPoX;
                    mGeoPo.y = curGeoPoY;
                    if (rand.Next(1, 10) % 3 == 0)
                    {
                        head += 3;
                    }
                    else
                    {
                        head -= 1;
                    }

                    iCurTime += rand.Next(10, 100);
                    Track_Info curTrackInfo = new Track_Info();
                    curTrackInfo.SetTrackInfo(iCurTime, speed, head, new M_POINT(mGeoPo.x, mGeoPo.y));
                    m_curPlayShipInfo.AddNewTrackInfo(curTrackInfo);

                    //添加到轨迹列表
                    int newRowIndex = this.dataGridView_List.Rows.Add();
                    this.dataGridView_List.Rows[newRowIndex].Cells["Column_Index"].Value = i + 1;//序号
                    this.dataGridView_List.Rows[newRowIndex].Cells["Column_lon"].Value = InteropEncDotNet.GetDegreeStringFromGeoCoor_new(true, curTrackInfo.mGeoPo.x, 10000000, 3);//经度
                    this.dataGridView_List.Rows[newRowIndex].Cells["Column_lat"].Value = InteropEncDotNet.GetDegreeStringFromGeoCoor_new(true, curTrackInfo.mGeoPo.y, 10000000, 3);//纬度
                    this.dataGridView_List.Rows[newRowIndex].Cells["Column_speed"].Value = curTrackInfo.speed;//航速
                    this.dataGridView_List.Rows[newRowIndex].Cells["Column_head"].Value = curTrackInfo.head;//航向
                    this.dataGridView_List.Rows[newRowIndex].Cells["Column_time"].Value = InteropEncDotNet.Int2DataTime(curTrackInfo.time);//时间
                }
            }
        }

        private void button_today_Click(object sender, EventArgs e)
        {
            DateTime curDateTime = DateTime.Now;
            this.dateTimePicker1.Value = new DateTime(curDateTime.Year, curDateTime.Month, curDateTime.Day, 0, 0, 0);
            this.dateTimePicker2.Value = curDateTime;
        }

        private void button_yesterday_Click(object sender, EventArgs e)
        {
            DateTime curDateTime = DateTime.Now;
            DateTime yesterdayDateTime = curDateTime.AddDays(-1);
            this.dateTimePicker1.Value = new DateTime(yesterdayDateTime.Year, yesterdayDateTime.Month, yesterdayDateTime.Day, 0, 0, 0);
            this.dateTimePicker2.Value = new DateTime(yesterdayDateTime.Year, yesterdayDateTime.Month, yesterdayDateTime.Day, 23, 59, 59);
        }

        private void button_oneWeek_Click(object sender, EventArgs e)
        {
            DateTime curDateTime = DateTime.Now;
            DateTime weekDateTime = curDateTime.AddDays(-7);
            this.dateTimePicker1.Value = new DateTime(weekDateTime.Year, weekDateTime.Month, weekDateTime.Day, curDateTime.Hour, curDateTime.Minute, curDateTime.Second);
            this.dateTimePicker2.Value = curDateTime;
        }
    }
}
